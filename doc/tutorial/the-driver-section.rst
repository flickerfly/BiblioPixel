The ``driver`` Section
------------------------------------------

The ``driver`` section define the hardware or virtual outputs that actually
display your lighting patterns.

The ``driver`` Section is a Class Section, and therefore its Fields depend on
the specific type of Driver.

We have the following driver classes built into BiblioPixel:
[TODO-API: link to the autogenerated docs here]

``artnet``
  Broadcasts data to ArtNet

``curses``
  Creates a colored display on your terminal using curses

``dummy``
  A driver that does nothing

``gif_writer``
  Writes animated GIFs representing the project

``hue``
  Controls Philips Hue bulbs

``mirror``
  A driver that warps a list of other drivers that are mirroring:
  displaying the same data

``network``
  A driver that sends the pixels to a receiver over an IP socket connection

``simpixel``
  Send layout and pixels to a OpenGL driver running in the browser

``SPI```
  Interfaces with the SPI ports on a raspberry pi or similar device

**Example 1**\ : A ``driver`` Section for an SPI device

.. code-block:: yaml

  driver:
    typename: SPI
    ledtype: WS2801
    interface: PERIPHERY

``text``
  Print out the r, g, b levels of each pixel on each frame.
  Spews out huge amounts of data - only good for debugging

``PiWS281X``
  Drives the WS281X strips on the Raspberry Pi

``Serial``
  All other serial drivers and strips, including the AllPixel

**Example 1**\ : A ``driver`` Section for a serial device

.. code-block:: yaml

   driver:
     c_order: BRG
     gamma: [1.1, 0.5, 0]
     ledtype: LPD8806
     typename: serial
     device_id: 1


.. bp-code-block:: footer

   shape: [64, 16]
   animation:
     typename: $bpa.matrix.MathFunc
     func: 17
     palette: trendy
